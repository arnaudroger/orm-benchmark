/**
 * This class is generated by jOOQ
 */
package org.sfm.jooq.beans.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" })
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestSmallBenchmarkObjectRecord extends org.jooq.impl.UpdatableRecordImpl<org.sfm.jooq.beans.tables.records.TestSmallBenchmarkObjectRecord> implements org.jooq.Record4<java.lang.Long, java.lang.String, java.lang.String, java.lang.Integer> {

	private static final long serialVersionUID = -11262285;

	/**
	 * Setter for <code>sfm.test_small_benchmark_object.id</code>.
	 */
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>sfm.test_small_benchmark_object.id</code>.
	 */
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>sfm.test_small_benchmark_object.name</code>.
	 */
	public void setName(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>sfm.test_small_benchmark_object.name</code>.
	 */
	public java.lang.String getName() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>sfm.test_small_benchmark_object.email</code>.
	 */
	public void setEmail(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>sfm.test_small_benchmark_object.email</code>.
	 */
	public java.lang.String getEmail() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>sfm.test_small_benchmark_object.year_started</code>.
	 */
	public void setYearStarted(java.lang.Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>sfm.test_small_benchmark_object.year_started</code>.
	 */
	public java.lang.Integer getYearStarted() {
		return (java.lang.Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Long, java.lang.String, java.lang.String, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Long, java.lang.String, java.lang.String, java.lang.Integer> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return org.sfm.jooq.beans.tables.TestSmallBenchmarkObject.TEST_SMALL_BENCHMARK_OBJECT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.sfm.jooq.beans.tables.TestSmallBenchmarkObject.TEST_SMALL_BENCHMARK_OBJECT.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return org.sfm.jooq.beans.tables.TestSmallBenchmarkObject.TEST_SMALL_BENCHMARK_OBJECT.EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field4() {
		return org.sfm.jooq.beans.tables.TestSmallBenchmarkObject.TEST_SMALL_BENCHMARK_OBJECT.YEAR_STARTED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value4() {
		return getYearStarted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestSmallBenchmarkObjectRecord value1(java.lang.Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestSmallBenchmarkObjectRecord value2(java.lang.String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestSmallBenchmarkObjectRecord value3(java.lang.String value) {
		setEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestSmallBenchmarkObjectRecord value4(java.lang.Integer value) {
		setYearStarted(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestSmallBenchmarkObjectRecord values(java.lang.Long value1, java.lang.String value2, java.lang.String value3, java.lang.Integer value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TestSmallBenchmarkObjectRecord
	 */
	public TestSmallBenchmarkObjectRecord() {
		super(org.sfm.jooq.beans.tables.TestSmallBenchmarkObject.TEST_SMALL_BENCHMARK_OBJECT);
	}

	/**
	 * Create a detached, initialised TestSmallBenchmarkObjectRecord
	 */
	public TestSmallBenchmarkObjectRecord(java.lang.Long id, java.lang.String name, java.lang.String email, java.lang.Integer yearStarted) {
		super(org.sfm.jooq.beans.tables.TestSmallBenchmarkObject.TEST_SMALL_BENCHMARK_OBJECT);

		setValue(0, id);
		setValue(1, name);
		setValue(2, email);
		setValue(3, yearStarted);
	}
}
