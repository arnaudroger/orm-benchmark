/**
 * This class is generated by jOOQ
 */
package org.sfm.jooq.beans.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" })
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestSmallBenchmarkObject extends org.jooq.impl.TableImpl<org.sfm.jooq.beans.tables.records.TestSmallBenchmarkObjectRecord> {

	private static final long serialVersionUID = -384937773;

	/**
	 * The singleton instance of <code>sfm.test_small_benchmark_object</code>
	 */
	public static final org.sfm.jooq.beans.tables.TestSmallBenchmarkObject TEST_SMALL_BENCHMARK_OBJECT = new org.sfm.jooq.beans.tables.TestSmallBenchmarkObject();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.sfm.jooq.beans.tables.records.TestSmallBenchmarkObjectRecord> getRecordType() {
		return org.sfm.jooq.beans.tables.records.TestSmallBenchmarkObjectRecord.class;
	}

	/**
	 * The column <code>sfm.test_small_benchmark_object.id</code>.
	 */
	public final org.jooq.TableField<org.sfm.jooq.beans.tables.records.TestSmallBenchmarkObjectRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>sfm.test_small_benchmark_object.name</code>.
	 */
	public final org.jooq.TableField<org.sfm.jooq.beans.tables.records.TestSmallBenchmarkObjectRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>sfm.test_small_benchmark_object.email</code>.
	 */
	public final org.jooq.TableField<org.sfm.jooq.beans.tables.records.TestSmallBenchmarkObjectRecord, java.lang.String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>sfm.test_small_benchmark_object.year_started</code>.
	 */
	public final org.jooq.TableField<org.sfm.jooq.beans.tables.records.TestSmallBenchmarkObjectRecord, java.lang.Integer> YEAR_STARTED = createField("year_started", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>sfm.test_small_benchmark_object</code> table reference
	 */
	public TestSmallBenchmarkObject() {
		this("test_small_benchmark_object", null);
	}

	/**
	 * Create an aliased <code>sfm.test_small_benchmark_object</code> table reference
	 */
	public TestSmallBenchmarkObject(java.lang.String alias) {
		this(alias, org.sfm.jooq.beans.tables.TestSmallBenchmarkObject.TEST_SMALL_BENCHMARK_OBJECT);
	}

	private TestSmallBenchmarkObject(java.lang.String alias, org.jooq.Table<org.sfm.jooq.beans.tables.records.TestSmallBenchmarkObjectRecord> aliased) {
		this(alias, aliased, null);
	}

	private TestSmallBenchmarkObject(java.lang.String alias, org.jooq.Table<org.sfm.jooq.beans.tables.records.TestSmallBenchmarkObjectRecord> aliased, org.jooq.Field<?>[] parameters) {
//		super(alias, org.sfm.jooq.beans.Sfm.SFM, aliased, parameters, "");
		super(alias, null, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.sfm.jooq.beans.tables.records.TestSmallBenchmarkObjectRecord> getPrimaryKey() {
		return org.sfm.jooq.beans.Keys.KEY_TEST_SMALL_BENCHMARK_OBJECT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.sfm.jooq.beans.tables.records.TestSmallBenchmarkObjectRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.sfm.jooq.beans.tables.records.TestSmallBenchmarkObjectRecord>>asList(org.sfm.jooq.beans.Keys.KEY_TEST_SMALL_BENCHMARK_OBJECT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.sfm.jooq.beans.tables.TestSmallBenchmarkObject as(java.lang.String alias) {
		return new org.sfm.jooq.beans.tables.TestSmallBenchmarkObject(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.sfm.jooq.beans.tables.TestSmallBenchmarkObject rename(java.lang.String name) {
		return new org.sfm.jooq.beans.tables.TestSmallBenchmarkObject(name, null);
	}
}
